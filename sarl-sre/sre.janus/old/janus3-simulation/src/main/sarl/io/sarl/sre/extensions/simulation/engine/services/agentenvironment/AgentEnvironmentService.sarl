/*
 * $Id$
 *
 * SARL is an general-purpose agent programming language.
 * More details on http://www.sarl.io
 *
 * Copyright (C) 2014-2021 the original authors or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package io.sarl.sre.extensions.simulation.engine.services.agentenvironment

import com.google.common.util.concurrent.Service
import com.google.inject.ImplementedBy

/**
 * This service manages the access to the agent environment from the SRE components.
 * 
 * @author $Author: sgalland$
 * @version $FullVersion$
 * @mavengroupid $GroupId$
 * @mavenartifactid $ArtifactId$
 * @since 0.12
 */
@ImplementedBy(typeof(NopAgentEnvironmentService))
interface AgentEnvironmentService extends Service {

	/** Run the agent environment behavior before the run of the agents.
	 * 
	 * @param untilTime the time to which (included) all the events must be fired.
	 */
	def runEnvironmentBeforeAgents(untilTime : double)

	/** Run the agent environment behavior after the run of the agents.
	 * 
	 * @param untilTime the time to which (included) all the events must be fired.
	 */
	def runEnvironmentAfterAgents(untilTime : double)

}
