Main_0=Run the Java compiler (ECL/JDT) after SARL on the all the Java source files. <arg> is "true" or "false".
Main_1=Specify where to place generated SARL files. <arg> is the output directory.
Main_10={0} --{1} <output folder> [OPTIONS] <source folder>...
Main_11=SARL Version: 
Main_12=SARL Specification Version: 
Main_13=Java Version: 
Main_14=Write the trace files for SARL code for debugging and source exploration. <arg> is "true" or "false".
Main_15=Write the storage files for SARL code (for debugging). <arg> is "true" or "false".
Main_16=Generate inline annotations for the SARL code. <arg> is "true" or "false".
Main_17=Turn on the debugging logging.
Main_18=Compiler is not verbose. Only errors are displayed.
Main_2=Temp directory to hold generated stubs and classes. <arg> is the temp directory.
Main_3=Specify where to find user class files. <arg> is the classpath.
Main_4=Specify where to find SARL compiler class files. <arg> is the boot classpath.
Main_5=Specify character encoding used by source files. <arg> is the encoding name.
Main_6=Create Java Source compatible to this version. <arg> is "true" or "false".
Main_7=Compiler will be more verbose. Verbosity is increased at each occurrence of this option.
Main_8=Display the version of the SARL compiler and the Java virtual machine.
Main_9=Display the SARL compiler help.
SarlBatchCompiler_0=Unknown Java Version Qualifier: {0}. Valid values are: {1}
SarlBatchCompiler_1=, 
SarlBatchCompiler_10=The configured output path "{0}" cannot be a child of the configured source directory "{1}".
SarlBatchCompiler_11=Invalid configuration
SarlBatchCompiler_12=All source folders and the output folder should have a common parent non-top level folder (like project folder)
SarlBatchCompiler_13=(Source folder: ''{0}'')
SarlBatchCompiler_14=(Output folder: ''{0}'')
SarlBatchCompiler_15=Target folder ''{0}'' must be a child of the project folder ''{1}''.
SarlBatchCompiler_16=Source folder ''{0}'' must be a child of the project folder ''{1}''.
SarlBatchCompiler_17=classpath used for SARL compilation : {0}
SarlBatchCompiler_18=Unable to close a classloader
SarlBatchCompiler_19=Creating stubs into {0}
SarlBatchCompiler_2=Compilation of stubs had errors.
SarlBatchCompiler_20=Generating stubs for {0}
SarlBatchCompiler_21=Generating the Java model elements
SarlBatchCompiler_22=Validating {0}
SarlBatchCompiler_23=Generating Java code for {0}
SarlBatchCompiler_24=Cannot create the class files because the class output path was not specified
SarlBatchCompiler_25=Compiling all the Java code
SarlBatchCompiler_26=\tGenerating elements for {0}
SarlBatchCompiler_27=\tResolving lazy references for {0}
SarlBatchCompiler_28=Saving the Java models elements into {0}
SarlBatchCompiler_29=Source folders: {0}
SarlBatchCompiler_3=Compilation of Java code against stubs had errors. This is expected and usually is not a probblem.
SarlBatchCompiler_30=Classpath: {0}
SarlBatchCompiler_31=Base URI: {0}
SarlBatchCompiler_32=File Base URI detected: {0}
SarlBatchCompiler_33=Base URI ignored (not file URI): {0}
SarlBatchCompiler_34=Common folder: {0}
SarlBatchCompiler_35=Output path: {0}
SarlBatchCompiler_36=No output path specified
SarlBatchCompiler_37=Source path: {0}
SarlBatchCompiler_4={0}: \t{1} - {2}\n{3}: {4}
SarlBatchCompiler_5={0}: \t{1}: {2}
SarlBatchCompiler_6=invoke batch compiler with ''{0}''
SarlBatchCompiler_7=load SARL file ''{0}''
SarlBatchCompiler_8=Error creating temp directory ''{0}''
SarlBatchCompiler_9=Cleaning folder {0}
