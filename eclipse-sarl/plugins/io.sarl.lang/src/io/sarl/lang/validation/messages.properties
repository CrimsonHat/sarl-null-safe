SARLJavaValidator_0=definition of {0} in {1}
SARLJavaValidator_1=The dispatch method {0} in type {1} must not be abstract
SARLJavaValidator_10=Nested skills are not allowed.
SARLJavaValidator_11=Attempt to override final method {0}
SARLJavaValidator_12=Cannot reduce the visibility of the overridden method {0}
SARLJavaValidator_13=The return type is incompatible with {0}
SARLJavaValidator_14=Expecting the return type {0}. It is recommended to write the return type, even if it is inferred from the overridden function.
SARLJavaValidator_15=The method {0} of type {1} must use override keyword since it actually overrides a supertype method.
SARLJavaValidator_16=The method {0} of type {1} shadows the method {2} of type {3}, but does not override it.
SARLJavaValidator_17=override
SARLJavaValidator_18=Expression with side effect is not allowed in guards.
SARLJavaValidator_19=Type mismatch: cannot convert from {0} to {1}
SARLJavaValidator_2=Nested events are not allowed.
SARLJavaValidator_20=The statement ''{0}'' is not yet supported by the SARL compiler.
SARLJavaValidator_21=The ''create''-method {0} in type {1} must not be abstract
SARLJavaValidator_22=The abstract method {0} in type {1} can only be defined by an abstract class.
SARLJavaValidator_23=The abstract method {0} in type {1} can only be defined by an abstract class.
SARLJavaValidator_24=''Create''-method {0} is not permitted in an interface
SARLJavaValidator_25=Abstract methods do not specify a body
SARLJavaValidator_26=definition of {0}
SARLJavaValidator_27=class {0}
SARLJavaValidator_28=interface {0}
SARLJavaValidator_29=enumeration {0}
SARLJavaValidator_3=agent {0}
SARLJavaValidator_30=annotation type {0}
SARLJavaValidator_31=Nested classes must be static
SARLJavaValidator_32=The dispatch method {0} in type {1} must not be abstract
SARLJavaValidator_33=The 'create'-method {0} in type {1} must not be abstract
SARLJavaValidator_34=The abstract method {0} in type {1} can only be defined by an abstract class.
SARLJavaValidator_35=The abstract method {0} in type {1} can only be defined by an abstract class.
SARLJavaValidator_36=The method {0} in type {1} should be declared abstract.
SARLJavaValidator_37='Create'-method {0} is not permitted in an interface
SARLJavaValidator_38=Abstract methods do not specify a body
SARLJavaValidator_39=SARL library not found on the classpath, or older than 0.3.1.
SARLJavaValidator_4=Nested agents are not allowed inside {0}.
SARLJavaValidator_40=Incompatible SARL library on the classpath. Actual: {0}. Expected: {1}.
SARLJavaValidator_5=behavior {0}
SARLJavaValidator_6=Nested behaviors are not allowed inside {0}.
SARLJavaValidator_7=capacity {0}
SARLJavaValidator_8=Nested capacities are not allowed inside {0}.
SARLJavaValidator_9=skill {0}
SARLValidator_0=Couldn''t find a valid version of the JDK in the classpath. The generator configuration specifies the version {0}. Please change the configuration in order to use the version {1} or higher.
SARLValidator_1=Couldn''t find a valid version of the Xtext base library in the classpath. You should add ''org.eclipse.xtext.xbase.lib'', version {0} or higher.
SARLValidator_9=Invalid action name ''{0}''. You must not give to an action a name with reserved characters.
SARLValidator_10=Invalid attribute name ''{0}''. You must not give to an action a name with reserved characters.
SARLValidator_13=Duplicate implemented feature ''{0}''.
SARLValidator_14=The feature ''{0}'' is already implemented by the super-type ''{1}''.
SARLValidator_15=The field ''{0}'' in ''{1}'' is hidding the inherited field ''{2}''.
SARLValidator_19=Undefined default constructor in the super-type.
SARLValidator_2=The ''{0}'' declaration is not used by the SARL compiler yet.
SARLValidator_21=Discouraged boolean value. The guard is always true.
SARLValidator_22=Dead code. The guard is always false.
SARLValidator_23=Type mismatch: cannot convert from {0} to {1}
SARLValidator_24=Invalid type: ''{0}''. Only {1} can be used after the keyword ''{2}''.
SARLValidator_25=capacities
SARLValidator_26=events
SARLValidator_27=Invalid supertype. Expecting {0}.
SARLValidator_28=an interface
SARLValidator_29=a class
SARLValidator_3=Discouraged use of reserved annotation. @{0} is an annotation that is reserved for the compiler usage.
SARLValidator_30=Attempt to override final class.
SARLValidator_31=Supertype must be a subtype of ''{0}''.
SARLValidator_32=Supertype must be of type ''{0}''.
SARLValidator_33=The inheritance hierarchy of ''{0}'' is inconsistent.
SARLValidator_34=Invalid implemented type: ''{0}''. Only subtypes of ''{1}'' are allowed for ''{2}''.
SARLValidator_35=Invalid implemented type: ''{0}''. Only the type ''{1}'' and one of its subtypes are allowed for ''{2}''.
SARLValidator_36=Missing implemented type ''{0}'' for ''{1}''.
SARLValidator_37=Discouraged capacity definition. A capacity without actions defined inside is not useful since it cannot be called by an agent or a behavior.
SARLValidator_39=Forbidden feature call: {0}.
SARLValidator_4=SARL compiler couldn''t be executed on the JDK version {0}. Please use the JDK {1} or higher.
SARLValidator_40=Discouraged feature call: {0}. You should use the dedicated language keyword, or an agent''s capacity in place of this feature call.
SARLValidator_42=The capacity ''{0}'' is not used.
SARLValidator_43=Redundant use of the capacity ''{0}''.
SARLValidator_44=Forbidden call to the exit function. The killing feature of the agent must be used.
SARLValidator_5=SARL compiler couldn''t be executed on the Xtext version {0}. Please use the Xtext {1} or higher.
