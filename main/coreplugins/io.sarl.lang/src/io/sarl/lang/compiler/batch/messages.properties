Main_0=Run the Java compiler (ECL/JDT) after SARL on the all the Java source files. <arg> is "true" or "false".
Main_1=Specify where to place generated SARL files. <arg> is the output directory.
Main_10={0} --{1} <output folder> [OPTIONS] <source folder>...
Main_11=SARL Version: 
Main_12=SARL Specification Version: 
Main_13=Java Version: 
Main_14=Write the trace files for SARL code for debugging and source exploration. <arg> is "true" or "false".
Main_15=Write the storage files for faster access to SARL binary resources. <arg> is "true" or "false".
Main_16=Generate inline annotations for the SARL code. <arg> is "true" or "false".
Main_17=Turn on the debugging logging.
Main_18=Compiler is not verbose. Only errors are displayed.
Main_19=Disable warning messages.
Main_2=Temp directory to hold generated stubs and classes. <arg> is the temp directory.
Main_20=Terminate compilation if warnings occur.
Main_21 = Change the level of a warning. <arg> is <warningid>=<severity>. Severity should be ign[ore], none, info[rmation], warn[ing], or err[or].
Main_22 = Generate equals and hashCode functions into the Java code. <arg> is "true" or "false".
Main_23 = Generate toString functions into the Java code. <arg> is "true" or "false".
Main_24 = Generate clone functions into the Java code. <arg> is "true" or "false".
Main_25 = Generate serial number fields into the Java code. <arg> is "true" or "false".
Main_3=Specify where to find user class files. <arg> is the classpath.
Main_4=Specify where to find SARL compiler class files. <arg> is the boot classpath.
Main_5=Specify character encoding used by source files. <arg> is the encoding name.
Main_6=Create Java Source compatible to this version. <arg> is "true" or "false".
Main_7=Compiler will be more verbose. Verbosity is increased at each occurrence of this option.
Main_8=Display the version of the SARL compiler and the Java virtual machine.
Main_9=Display the SARL compiler help.
SarlBatchCompiler_0=Unknown Java Version Qualifier: {0}. Valid values are: {1}
SarlBatchCompiler_1=, 
SarlBatchCompiler_10=The configured output path "{}" cannot be a child of the configured source directory "{}".
SarlBatchCompiler_11=Invalid configuration
SarlBatchCompiler_12=All source folders and the output folder should have a common parent non-top level folder (like project folder)
SarlBatchCompiler_13=(Source folder: {})
SarlBatchCompiler_14=(Output folder: {})
SarlBatchCompiler_15=Target folder {} must be a child of the project folder {}.
SarlBatchCompiler_16=Source folder {} must be a child of the project folder {}.
SarlBatchCompiler_17=classpath used for SARL compilation : {}
SarlBatchCompiler_18=Unable to close a classloader
SarlBatchCompiler_19=Creating stubs into {}
SarlBatchCompiler_2=Compilation of stubs had errors.
SarlBatchCompiler_20=Generating stubs for {}
SarlBatchCompiler_21=Generating and inferring the target model(s)
SarlBatchCompiler_22=Validating {}
SarlBatchCompiler_23=Generating Java code for {}
SarlBatchCompiler_24=Cannot create the class files because the class output path was not specified
SarlBatchCompiler_25=Compiling the generated Java source file(s)
SarlBatchCompiler_26=\tGenerating elements for {}
SarlBatchCompiler_27=\tResolving lazy references for {}
SarlBatchCompiler_28=Creating the target model file(s) into the folder {}
SarlBatchCompiler_29=Source folders: {}
SarlBatchCompiler_3=Compilation of Java code against stubs had errors. This is expected and usually is not a probblem.
SarlBatchCompiler_30=Classpath: {}
SarlBatchCompiler_31=Base URI: {}
SarlBatchCompiler_32=File Base URI detected: {}
SarlBatchCompiler_33=Base URI ignored (not file URI): {}
SarlBatchCompiler_34=Common folder: {}
SarlBatchCompiler_35=Output path: {}
SarlBatchCompiler_36=No output path specified
SarlBatchCompiler_37=Source path: {}
SarlBatchCompiler_38=Validating the SARL source files
SarlBatchCompiler_39=Errors or warnings inside {}:
SarlBatchCompiler_4={0}: \t{1} - {2}\n{3}: {4}
SarlBatchCompiler_40={0} - Internal
SarlBatchCompiler_42=Compiling
SarlBatchCompiler_43=Installing generator configurations
SarlBatchCompiler_44=Creating the working directories
SarlBatchCompiler_45=Turning on the resource indexation
SarlBatchCompiler_46=Turning off the resource indexation
SarlBatchCompiler_47=Uninstalling compiler features
SarlBatchCompiler_48=Removing working folders
SarlBatchCompiler_49=Generating the Java source files from SARL files
SarlBatchCompiler_5={0}: \t{1}: {2}
SarlBatchCompiler_50=Compiling the Java stubs
SarlBatchCompiler_51=Compiling the existing Java source files
SarlBatchCompiler_52=Compiling the generating Java source files
SarlBatchCompiler_53=Creating the Java stubs for enabling type resolution
SarlBatchCompiler_54=Loading the SARL code files
SarlBatchCompiler_55=Checking the SARL output path
SarlBatchCompiler_56=Checking the SARL source paths
SarlBatchCompiler_57=Configuring the workspace
SarlBatchCompiler_58=Installing the JVM type provider
SarlBatchCompiler_59=Installing the JVM annotation type provider
SarlBatchCompiler_6=invoke batch compiler with:\n{}
SarlBatchCompiler_7=load SARL file {}
SarlBatchCompiler_8=Error creating temp directory ''{0}''
SarlBatchCompiler_9=Cleaning folder {}
