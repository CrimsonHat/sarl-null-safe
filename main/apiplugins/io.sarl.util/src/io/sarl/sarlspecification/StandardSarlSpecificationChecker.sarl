/*
 * $Id$
 *
 * SARL is an general-purpose agent programming language.
 * More details on http://www.sarl.io
 *
 * Copyright (C) 2014-2017 the original authors or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.sarl.sarlspecification

import org.osgi.framework.Version

import io.sarl.lang.^annotation.SarlSpecification

/** Check if a given agent class follows a specific version of the SARL specifications.
 *
 * @author $Author: ssgalland$
 * @version $FullVersion$
 * @mavengroupid $GroupId$
 * @mavenartifactid $ArtifactId$
 * @since 0.5
 */
class StandardSarlSpecificationChecker implements SarlSpecificationChecker {

	override getSarlSpecificationVersion(type : Class<?>) : float {
		if (type !== null) {
			var annotationInstance = type.getAnnotation(typeof(SarlSpecification))
			if (annotationInstance !== null) {
				val versionString = annotationInstance.value
				val version = Version::parseVersion(versionString)
				if (Version::emptyVersion != version) {
					var minor = version.minor
					var factor = 1f
					while (minor > 0) {
						factor *= 10
						minor /= 10
					}
					return version.major + version.minor / factor
				}
			}
		}
		return Float::NaN
	}

}

