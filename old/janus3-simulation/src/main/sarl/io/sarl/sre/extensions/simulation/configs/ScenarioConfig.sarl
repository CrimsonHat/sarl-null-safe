/* 
 * $Id$
 * 
 * SARL is an general-purpose agent programming language.
 * More details on http://www.sarl.io
 * 
 * Copyright (C) 2014-2021 the original authors or authors.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package io.sarl.sre.extensions.simulation.configs

import com.google.inject.AbstractModule
import com.google.inject.Module
import io.bootique.BQModule
import io.bootique.BQModuleProvider
import io.bootique.annotation.BQConfig
import io.bootique.annotation.BQConfigProperty
import java.lang.reflect.Type
import java.util.Collections
import java.util.Date
import java.util.Map
import org.eclipse.xtend.lib.annotations.Accessors

import static io.sarl.sre.extensions.simulation.configs.ScenarioConfig.*

/** 
 * Configuration of a simulation scenario.
 * 
 * @author $Author: sgalland$
 * @version $FullVersion$
 * @mavengroupid $GroupId$
 * @mavenartifactid $ArtifactId$
 * @since 0.12
 */
@BQConfig("Configuration of the simulation's scenario")
class ScenarioConfig {

	/** 
	 * Prefix for the configuration entries of the scenario configurations.
	 */
	public static val PREFIX : String = SimulationConfig::PREFIX + ".scenario"; // $NON-NLS-1$

	/** 
	 * Name of the property that contains the creation or last-update date of the scenario.
	 * 
	 * @see #DATE_VALUE
	 */
	public static val DATE_NAME = PREFIX + ".date"

	/**
	 * The default creation date for a scenario.
	 * 
	 * @see #DATE_NAME
	 */
	public static val DATE_VALUE : Date = null

	/** 
	 * Name of the property that contains the name of the scenario.
	 * 
	 * @see #DATE_VALUE
	 */
	public static val NAME_NAME = PREFIX + ".name"

	/** 
	 * The default name for a scenario.
	 * 
	 * @see #NAME_NAME
	 */
	public static val NAME_VALUE : String = null

	@Accessors(PUBLIC_GETTER)
	var date : Date = DATE_VALUE

	@Accessors(PUBLIC_GETTER)
	var name : String = NAME_VALUE
	
	/** 
	 * Change the date of creation or last-update of the scenario
	 * 
	 * @param date the date.
	 */
	@BQConfigProperty("date of creation or date of last-update of the scenario")
	def setDate(date : Date) : void {
		this.date = date
	}

	/** 
	 * Change the date of creation or last-update of the scenario
	 * 
	 * @param date the milliseconds since January 1, 1970, 00:00:00 GMT..
	 */
	def setDate(date : long) : void {
		this.date = new Date(date)
	}

	/** 
	 * Change the name of the scenario
	 * 
	 * @param name the new name.
	 */
	@BQConfigProperty("name of the scenario")
	def setName(name : String) : void {
		this.name = if (name.nullOrEmpty) null else name
	}

}

/** 
 * Module for creating and configuring the simulation scenario configuration.
 * 
 * @author $Author: sgalland$
 * @version $FullVersion$
 * @mavengroupid $GroupId$
 * @mavenartifactid $ArtifactId$
 * @since 0.12
 */
class ScenarioConfigModule extends AbstractModule {

	override configure : void {
		//
	}

}

/** Provider of the module for creating the simulation scenario configuration.
 * 
 * @author $Author: sgalland$
 * @version $FullVersion$
 * @mavengroupid $GroupId$
 * @mavenartifactid $ArtifactId$
 * @since 0.12
 */
class ScenarioConfigModuleProvider implements BQModuleProvider {

	override module : Module {
		return new ScenarioConfigModule
	}

	override configs : Map<String, Type> {
		return Collections::singletonMap(PREFIX, typeof(ScenarioConfig))
	}

	override moduleBuilder : BQModule.Builder {
		return BQModule::builder(module).overrides(overrides).providerName(name).configs(configs).description(
			Messages::ScenarioConfigModuleProvider_0);
	}

}
