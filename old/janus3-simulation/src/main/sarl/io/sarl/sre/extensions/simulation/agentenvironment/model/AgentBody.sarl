/* 
 * $Id$
 * This file is a part of the Arakhne Foundation Classes, http://www.arakhne.org/afc
 * 
 * Copyright (c) 2000-2012 Stephane GALLAND.
 * Copyright (c) 2005-10, Multiagent Team, Laboratoire Systemes et Transports,
 * Universite de Technologie de Belfort-Montbeliard.
 * Copyright (c) 2013-2020 The original authors, and other authors.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package io.sarl.sre.extensions.simulation.agentenvironment.model

import io.sarl.sre.extensions.simulation.agentenvironment.events.Influence
import java.util.UUID
import org.arakhne.afc.math.physics.kinematic.linear.LinearAccelerationKinematic
import org.arakhne.afc.math.physics.kinematic.linear.LinearInstantAccelerationKinematic

/**
 * This class is the definition of the body of an agent, according to Galland et al.
 *
 * @author $Author: sgalland$
 * @version $FullVersion$
 * @mavengroupid $GroupId$
 * @mavenartifactid $ArtifactId$
 * @since 0.12
 */
interface AgentBody extends LinearInstantAccelerationKinematic, LinearAccelerationKinematic {

	/** Replies the identifier of the body. */
	def getUUID : UUID

	/** Register the influence to be applied by this body as soon as possible. */
	def setInfluence(influence : Influence)

	/** Replies the lastest influence to be apply. The next call this function replies {@code null},
	 * except if {@link #setInfluence(Influence)} is called before. Then, the value given as argument
	 * to {@link #setInfluence(Influence)} is replied once.
	 */
	def consumeInfluence : Influence

}

