/*
 * $Id$
 *
 * SARL is an general-purpose agent programming language.
 * More details on http://www.sarl.io
 *
 * Copyright (C) 2014-2020 the original authors or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.sarl.sre.tests.runtime.services.probing

import io.sarl.sre.boot.configs.subconfigs.ServicesConfig
import io.sarl.sre.services.probing.Probe
import io.sarl.sre.services.probing.ProbeService
import org.arakhne.afc.bootique.variables.VariableNames
import org.junit.jupiter.api.DisplayName
import org.junit.jupiter.api.Tag

/**
 * @author $Author: sgalland$
 * @version $FullVersion$
 * @mavengroupid $GroupId$
 * @mavenartifactid $ArtifactId$
 */
@DisplayName("run: SynchronousProbe service test")
@Tag("sre-run")
@Tag("janus")
class SynchronousProbeServiceTest extends AbstractProbeServiceTest {

	protected def runTestCase_prepare {
		var prop = VariableNames::toPropertyName(ServicesConfig::ASYNCHRONOUS_PROBE_UPDATE_NAME)
		System::setProperty(prop, Boolean::FALSE.toString)
	}

	protected def runTestCase_beforeChangeField(service : ProbeService, probe : Probe<Integer>) {
		service.sync
	}

	protected def runTestCase_beforeStopTest(service : ProbeService, probe : Probe<Integer>) {
		service.sync
	}

	protected def runTestCase_afterStopTest(service : ProbeService, probe : Probe<Integer>) {
		service.sync
	}

}
