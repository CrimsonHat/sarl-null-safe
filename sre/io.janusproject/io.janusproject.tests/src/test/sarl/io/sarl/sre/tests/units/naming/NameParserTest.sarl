/*
 * $Id$
 *
 * SARL is an general-purpose agent programming language.
 * More details on http://www.sarl.io
 *
 * Copyright (C) 2014-2020 the original authors or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.sarl.sre.tests.units.naming

import io.sarl.sre.naming.AgentSchemeNameParser
import io.sarl.sre.naming.BehaviorSchemeNameParser
import io.sarl.sre.naming.ContextSchemeNameParser
import io.sarl.sre.naming.NameParser
import io.sarl.sre.naming.ServiceSchemeNameParser
import io.sarl.sre.naming.SkillSchemeNameParser
import io.sarl.sre.naming.SpaceSchemeNameParser
import io.sarl.sre.tests.testutils.^extension.PropertyRestoreExtension
import io.sarl.tests.api.Nullable
import io.sarl.tests.api.extensions.ContextInitExtension
import io.sarl.tests.api.extensions.JavaVersionCheckExtension
import java.net.URI
import org.junit.jupiter.api.BeforeEach
import org.junit.jupiter.api.DisplayName
import org.junit.jupiter.api.Tag
import org.junit.jupiter.api.Test
import org.junit.jupiter.api.^extension.ExtendWith

import static extension java.net.URI.create
import static extension org.junit.jupiter.api.Assertions.assertNull

/**
 * @author $Author: sgalland$
 * @version $FullVersion$
 * @mavengroupid $GroupId$
 * @mavenartifactid $ArtifactId$
 */
@ExtendWith(#[
	typeof(ContextInitExtension),
	typeof(JavaVersionCheckExtension),
	typeof(PropertyRestoreExtension)
])
@DisplayName("unit: base NameParser test")
@Tag("unit")
class NameParserTest {

	@Nullable
	var parser : NameParser

	@BeforeEach
	def setUp : void {
		this.parser = new NameParser
		this.parser.addSchemeNameParser(new ServiceSchemeNameParser)
		this.parser.addSchemeNameParser(new ContextSchemeNameParser)
		this.parser.addSchemeNameParser(new SpaceSchemeNameParser)
		this.parser.addSchemeNameParser(new SkillSchemeNameParser)
		this.parser.addSchemeNameParser(new AgentSchemeNameParser)
		this.parser.addSchemeNameParser(new BehaviorSchemeNameParser)		
	}

	@Test
	def decode_String_null {
		var v : String = null
		this.parser.decode(v).assertNull
	}

	@Test
	def decode_String_empty {
		this.parser.decode("").assertNull
	}

	@Test
	def decode_String_noScheme {
		this.parser.decode("agentName").assertNull
	}

	@Test
	def decode_String_http {
		this.parser.decode("http://sarl.io").assertNull
	}

	@Test
	def normalize_URI_null {
		this.parser.normalize(null).assertNull
	}

	@Test
	def normalize_URI_empty {
		this.parser.normalize("".create).assertNull
	}

	@Test
	def normalize_URI_http {
		this.parser.normalize("http://sarl.io".create).assertNull
	}

	@Test
	def decode_URI_null {
		var v : URI = null
		this.parser.decode(v).assertNull
	}

	@Test
	def decode_URI_empty {
		this.parser.decode("".create).assertNull
	}

	@Test
	def decode_URL_noScheme {
		this.parser.decode("agentName".create).assertNull
	}

	@Test
	def decode_URI_http {
		this.parser.decode("http://sarl.io".create).assertNull
	}

}
