/*
 * $Id$
 *
 * SARL is an general-purpose agent programming language.
 * More details on http://www.sarl.io
 *
 * Copyright (C) 2014-@RELEASE_YEAR@ the original authors or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.sarl.sre.tests.runtime.bugs.bug977.mocks

import io.sarl.core.Destroy
import io.sarl.core.Initialize
import io.sarl.sre.test.framework.skills.TestingCapacity
import io.sarl.sre.test.framework.skills.TestingSkill

abstract agent AbstractAgent {

	protected var i : int = 0

	uses TestingCapacity

	def ensureSkill(e : Initialize) : void {
		setSkill(new TestingSkill(e))
	}

	on Initialize {
		occurrence.ensureSkill
		addResult("1")
	}

	on Initialize [i < 0] {
		occurrence.ensureSkill
		addResult("-1-")
		i++
	}
	
	/* A disjoint condition from the previous */
	on Initialize [i >= 0] {
		occurrence.ensureSkill
		addResult("2")
		i--
	}

	def sayGoodBye : void {
		addResult("-2-")
	}
	
	on Destroy {
		sayGoodBye
	}
	
}
