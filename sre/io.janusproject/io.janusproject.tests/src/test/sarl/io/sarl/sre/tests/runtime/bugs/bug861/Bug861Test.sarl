/*
 * $Id$
 *
 * SARL is an general-purpose agent programming language.
 * More details on http://www.sarl.io
 *
 * Copyright (C) 2014-2020 the original authors or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License")
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package io.sarl.sre.tests.runtime.bugs.bug861

import io.sarl.sre.tests.runtime.bugs.bug861.mocks.BootAgent0
import io.sarl.sre.tests.runtime.bugs.bug861.mocks.Initialized
import io.sarl.sre.tests.testutils.^extension.PropertyRestoreExtension
import io.sarl.sre.tests.testutils.^extension.SreRunContext
import io.sarl.sre.tests.testutils.^extension.SreRunExtension
import io.sarl.tests.api.extensions.ContextInitExtension
import io.sarl.tests.api.extensions.JavaVersionCheckExtension
import java.util.UUID
import org.junit.jupiter.api.DisplayName
import org.junit.jupiter.api.Tag
import org.junit.jupiter.api.Test
import org.junit.jupiter.api.^extension.ExtendWith

import static io.sarl.sre.tests.testutils.Constants.*
import static extension io.sarl.tests.api.tools.TestAssertions.*
import static extension org.junit.jupiter.api.Assertions.assertEquals
import static extension org.junit.jupiter.api.Assertions.assertNotNull
import io.sarl.sre.tests.testutils.exception.SreTimeoutException
import io.sarl.sre.tests.runtime.bugs.bug861.mocks.BootAgent1

/** Tests for issue #861: Cannot use emit function in the Initialize handler.
 *
 * <p>See: https://github.com/sarl/sarl/issues/861
 *
 * @author $Author: sgalland$
 * @version $FullVersion$
 * @mavengroupid $GroupId$
 * @mavenartifactid $ArtifactId$
 * @see "https://github.com/sarl/sarl/issues/861"
 */
@ExtendWith(#[
	typeof(ContextInitExtension),
	typeof(JavaVersionCheckExtension),
	typeof(PropertyRestoreExtension),
	typeof(SreRunExtension)
])
@DisplayName("run: Bug #861")
@Tag("run")
class Bug861Test {

	@Test
	@DisplayName("Emit without scope")
	def runWithoutScope(extension rc : SreRunContext) : void {
		typeof(BootAgent0).runSre(null)

	 	assertEquals(2, getNumberOfResults(bootAgent))

		val childAgent = getResult(bootAgent, typeof(UUID), 0)
		childAgent.assertNotNull

		val initEvent0 = getResult(bootAgent, typeof(Initialized), 1)
		initEvent0.assertNotNull
		childAgent.assertEquals(initEvent0.source.UUID)
		
		assertEquals(1, getNumberOfResults(childAgent))

		val initEvent1 = getResult(childAgent, typeof(Initialized), 0)
		initEvent1.assertNotNull
		childAgent.assertEquals(initEvent1.source.UUID)
	}

	@Test
	@DisplayName("Emit with scope")
	def runWithScope(extension rc : SreRunContext) : void {
		typeof(SreTimeoutException).whenException [
			typeof(BootAgent1).runSre(null, VERY_SHORT_TIMEOUT)
		].verify [
			assertEquals(2, getNumberOfResults(bootAgent))

			val childAgent = getResult(bootAgent, typeof(UUID), 0)
			childAgent.assertNotNull

			val initEvent0 = getResult(bootAgent, typeof(Initialized), 1)
			initEvent0.assertNotNull
			childAgent.assertEquals(initEvent0.source.UUID)

			assertEquals(0, getNumberOfResults(childAgent))
		]
	}

}
