/*
 * $Id$
 *
 * SARL is an general-purpose agent programming language.
 * More details on http://www.sarl.io
 *
 * Copyright (C) 2014-2020 the original authors or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License")
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package io.sarl.sre.tests.runtime.bugs.bug861

import io.sarl.sre.tests.runtime.bugs.bug861.mocks.BootAgent
import io.sarl.sre.tests.testutils.^extension.PropertyRestoreExtension
import io.sarl.sre.tests.testutils.^extension.SreRunContext
import io.sarl.sre.tests.testutils.^extension.SreRunExtension
import io.sarl.tests.api.extensions.ContextInitExtension
import io.sarl.tests.api.extensions.JavaVersionCheckExtension
import java.util.Collection
import java.util.UUID
import org.arakhne.afc.util.Triplet
import org.junit.jupiter.api.DisplayName
import org.junit.jupiter.api.Tag
import org.junit.jupiter.api.Test
import org.junit.jupiter.api.^extension.ExtendWith

import static io.sarl.sre.tests.testutils.Constants.*
import static org.junit.jupiter.api.Assertions.*

import static extension org.junit.jupiter.api.Assertions.assertNotNull

/** Tests for issue #861: Cannot use emit function in the Initialize handler.
 *
 * <p>See: https://github.com/sarl/sarl/issues/861
 *
 * @author $Author: sgalland$
 * @version $FullVersion$
 * @mavengroupid $GroupId$
 * @mavenartifactid $ArtifactId$
 * @see "https://github.com/sarl/sarl/issues/861"
 */
@ExtendWith(#[
	typeof(ContextInitExtension),
	typeof(JavaVersionCheckExtension),
	typeof(PropertyRestoreExtension),
	typeof(SreRunExtension)
])
@DisplayName("run: Bug #861")
@Tag("run")
class Bug861Test {

	@Test
	def run_01(extension rc : SreRunContext) : void {
		typeof(BootAgent).runSre(null, STANDARD_TIMEOUT)

		var bootAgent = getBootAgent
	 	assertEquals(2, getNumberOfResults(bootAgent))
		val childAgent = getResult(bootAgent, typeof(UUID), 0)
		childAgent.assertNotNull
		val spawnEvents1 : Triplet<Boolean, UUID, Collection<UUID>> = getResult(bootAgent, typeof(Triplet), 1)
		assertNotNull(spawnEvents1)
		assertTrue(spawnEvents1.getA().booleanValue())
		assertEquals(bootAgent, spawnEvents1.getB())
		assertEquals(1, spawnEvents1.getC().size())
		assertEquals(childAgent, spawnEvents1.getC().iterator().next())
		
		assertEquals(0, getNumberOfResults(childAgent))
	}

}
