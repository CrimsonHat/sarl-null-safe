/*
 * $Id$
 *
 * SARL is an general-purpose agent programming language.
 * More details on http://www.sarl.io
 *
 * Copyright (C) 2014-2020 the original authors or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License")
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.sarl.sre.tests.units.services.lifecycle

import io.sarl.sre.internal.SequenceListenerNotifier
import io.sarl.sre.internal.SmartListenerCollection
import io.sarl.sre.services.context.ExternalContextMemberListener
import io.sarl.sre.services.executor.ExecutorService
import io.sarl.sre.services.lifecycle.AgentCreatorProvider
import io.sarl.sre.services.lifecycle.LifecycleServiceListener
import io.sarl.sre.services.lifecycle.SkillUninstaller
import io.sarl.sre.services.lifecycle.StandardLifecycleService
import io.sarl.sre.services.logging.LoggingService
import javax.inject.Provider

/**
 * @author $Author: sgalland$
 * @version $FullVersion$
 * @mavengroupid $GroupId$
 * @mavenartifactid $ArtifactId$
 */
class StandardLifecycleServiceTest extends AbstractLifecycleServiceTest<StandardLifecycleService> {

	override newService(executor : ExecutorService, logger : LoggingService, skillUninstaller : SkillUninstaller,
		agentCreatorProvider : AgentCreatorProvider, contextListenerProvider : Provider<ExternalContextMemberListener>,
		lifecycleListenerProvider : Provider<LifecycleServiceListener>) : StandardLifecycleService {
		var coll = new SmartListenerCollection(new SequenceListenerNotifier)
		return new StandardLifecycleService(this.checker, agentCreatorProvider,
			coll, lifecycleListenerProvider, contextListenerProvider,
			skillUninstaller, executor, logger);
	}

}
