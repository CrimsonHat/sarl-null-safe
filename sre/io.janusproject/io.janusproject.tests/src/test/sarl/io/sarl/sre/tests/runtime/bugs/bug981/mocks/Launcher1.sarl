/*
 * $Id$
 *
 * SARL is an general-purpose agent programming language.
 * More details on http://www.sarl.io
 *
 * Copyright (C) 2014-@RELEASE_YEAR@ the original authors or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.sarl.sre.tests.runtime.bugs.bug981.mocks

import io.sarl.sre.tests.testutils.agents.TestingAgent
import io.sarl.sre.tests.testutils.agents.TestingAgent.RunPolicy
import io.sarl.core.Lifecycle
import io.sarl.core.Schedules
import io.sarl.core.DefaultContextInteractions

agent Launcher1 extends TestingAgent {

	uses Lifecycle, Schedules, DefaultContextInteractions

	val COUNT = 100

	def runAgentTest : RunPolicy {
		for (var i : int = 0; i < COUNT; i++) {
			typeof(MyAgent1).spawn(buildAgentInitializationParameters(i))
		}
		in(5000) [
			emit(new Die)
			killMe
		]
		return RunPolicy::STANDARD
	}

}
