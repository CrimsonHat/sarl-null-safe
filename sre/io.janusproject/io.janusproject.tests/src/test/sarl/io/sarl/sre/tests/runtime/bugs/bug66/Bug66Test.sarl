/*
 * $Id$
 *
 * Janus platform is an open-source multiagent platform.
 * More details on http://www.janusproject.io
 *
 * Copyright (C) 2014-2020 the original authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.sarl.sre.tests.runtime.bugs.bug66

import io.sarl.lang.core.EventSpace
import io.sarl.sre.tests.runtime.bugs.bug66.mocks.MySpace
import io.sarl.sre.tests.runtime.bugs.bug66.mocks.SpaceCreatorWithDefaultSpaceAnnotationAgent
import io.sarl.sre.tests.runtime.bugs.bug66.mocks.SpaceCreatorWithNamedAnnotationAgent
import io.sarl.sre.tests.testutils.^extension.PropertyRestoreExtension
import io.sarl.sre.tests.testutils.^extension.SreRunContext
import io.sarl.sre.tests.testutils.^extension.SreRunExtension
import io.sarl.tests.api.extensions.ContextInitExtension
import io.sarl.tests.api.extensions.JavaVersionCheckExtension
import org.junit.jupiter.api.DisplayName
import org.junit.jupiter.api.Tag
import org.junit.jupiter.api.Test
import org.junit.jupiter.api.^extension.ExtendWith

import static extension org.junit.jupiter.api.Assertions.assertEquals
import static extension org.junit.jupiter.api.Assertions.assertNotNull
import static extension org.junit.jupiter.api.Assertions.assertSame

/**
 * Unit test for the issue #66: Injection of the default space in a Space implementation.
 * 
 * @author $Author: sgalland$
 * @version $FullVersion$
 * @mavengroupid $GroupId$
 * @mavenartifactid $ArtifactId$
 * @see https://github.com/sarl/sarl/issues/66
 */
@ExtendWith(#[
	typeof(ContextInitExtension),
	typeof(JavaVersionCheckExtension),
	typeof(PropertyRestoreExtension),
	typeof(SreRunExtension)
])
@DisplayName("run: Bug #66")
@Tag("run")
class Bug66Test {

	@Test
	def injectionWithNamedAnnotation(extension rc : SreRunContext) : void {
		typeof(SpaceCreatorWithNamedAnnotationAgent).runSre(null)
		2.assertEquals(getNumberOfResults)
		val dftSpc = typeof(EventSpace).getResult(0)
		dftSpc.assertNotNull
		val createdSpc = typeof(MySpace).getResult(1)
		dftSpc.assertSame(createdSpc.getTheOtherSpace)
	}

	@Test
	def injectionWithDefaultSpaceAnnotation(extension rc : SreRunContext) : void {
		typeof(SpaceCreatorWithDefaultSpaceAnnotationAgent).runSre(null)
		2.assertEquals(getNumberOfResults)
		val dftSpc = typeof(EventSpace).getResult(0)
		dftSpc.assertNotNull
		val createdSpc = typeof(MySpace).getResult(1)
		dftSpc.assertSame(createdSpc.getTheOtherSpace)
	}

}
