/*
 * $Id$
 *
 * SARL is an general-purpose agent programming language.
 * More details on http://www.sarl.io
 *
 * Copyright (C) 2014-2020 the original authors or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.sarl.sre.spaces

import io.sarl.lang.annotation.PrivateAPI
import io.sarl.lang.core.Space
import java.util.UUID
import java.util.concurrent.ConcurrentHashMap

/** 
 * Space with participants that exhibits the participants' list.
 * 
 * @author $Author: sgalland$
 * @version $FullVersion$
 * @mavengroupid $GroupId$
 * @mavenartifactid $ArtifactId$
 * @since 0.10
 */
@SuppressWarnings("use_reserved_sarl_annotation")
@PrivateAPI
interface SpaceWithParticipants extends Space {

	/** Replies the internal data structure for storing the strong space's participants.
	 * 
	 * @return the entire strong participant structure, never {@code null}
	 * @since 0.11
	 */
	def getInternalStrongParticipantStructure : ConcurrentHashMap<UUID, Participant>

	/** Replies the internal data structure for storing the weak space's participants.
	 * 
	 * @return the entire weak participant structure, or {@code null} if none.
	 * @since 0.11
	 */
	def getInternalWeakParticipantStructure : ConcurrentHashMap<UUID, Participant>

	/** Replies the internal data structure for storing the weak space's participants.
	 * 
	 * @return the entire weak participant structure, never {@code null}.
	 * @since 0.11
	 */
	def ensureInternalWeakParticipantStructure : ConcurrentHashMap<UUID, Participant>

}

